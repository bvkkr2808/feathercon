description = "Xoom FeatherCon Servlet Container"

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'

def btCredentialFile = new File(new File(System.getProperty("user.home"), ".gradle"), "bintray.gradle")
if (btCredentialFile.exists()) {
    apply from: file(btCredentialFile.getAbsolutePath())
}
if (!hasProperty("bintray")) {
    ext.bintray = [user: "", apikey: ""]
}

group = "com.xoom.oss"
version = "2.0"

repositories {
    mavenCentral()
}

ext.versions = [
        intellij_annotations: "12.0",
        jersey: "1.17",
        jetty: "9.1.0.v20131115",
        junit: "4.11",
        logback: "1.0.13",
        slf4j: "1.7.5"
]

ext.libraries = [
        jetty: [
                "org.eclipse.jetty:jetty-server:${versions.jetty}",
                "org.eclipse.jetty:jetty-servlet:${versions.jetty}",
                'org.eclipse.jetty:jetty-websocket:8.1.14.v20131031'
        ],
        jersey: [
                "com.sun.jersey:jersey-core:${versions.jersey}",
                "com.sun.jersey:jersey-json:${versions.jersey}",
                "com.sun.jersey:jersey-server:${versions.jersey}",
                "com.sun.jersey:jersey-servlet:${versions.jersey}",
                "com.sun.jersey:jersey-client:${versions.jersey}"
        ]
]

dependencies {
    compile "org.slf4j:slf4j-api:${versions.slf4j}"
    compile "ch.qos.logback:logback-classic:${versions.logback}"
    compile libraries.jetty
    compile group: "com.intellij", name: "annotations", version: versions.intellij_annotations

    testCompile "org.slf4j:jul-to-slf4j:${versions.slf4j}"
    testCompile "org.slf4j:log4j-over-slf4j:${versions.slf4j}"
    testCompile group: "junit", name: "junit", version: versions.junit
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile libraries.jersey
}

tasks.withType(Test) {
    systemProperties = System.getProperties()
    jvmArgs '-Xmx2g'
    testLogging {
        showStandardStreams = true
        exceptionFormat "full"
    }
}

tasks.withType(Compile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = targetCompatibility = 1.6
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.8'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
        }
    }

    repositories {
        maven {
            url "https://api.bintray.com/maven/xoom/xoomoss/feathercon"
            credentials {
                username = bintray.user
                password = bintray.apikey
            }
        }
    }
}

// http://forums.gradle.org/gradle/topics/_1_6_rc_1_jacoco_plugin_does_not_show_line_numbers
jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
    dependsOn test
}

